#_ STORM CONFIGURATION _#
#_ MANAGED BY PUPPET - DO NOT EDIT _#

#_ CORE _#
java.library.path: "<%= @java_library_path.join(':') %>"
storm.log4j2.conf.dir: "log4j2"
storm.local.dir: "<%= @local_dir %>"
logs.users: null
storm.cluster.mode: "<%= @cluster_mode %>"
storm.local.mode.zmq: <%= @local_mode_zmq %>
storm.home: "<%= @home %>"

storm.thrift.transport: "org.apache.storm.security.auth.SimpleTransportPlugin"
storm.principal.tolocal: "org.apache.storm.security.auth.DefaultPrincipalToLocal"
storm.group.mapping.service: "org.apache.storm.security.auth.ShellBasedGroupsMapping"
storm.group.mapping.service.params: null
storm.messaging.transport: "org.apache.storm.messaging.netty.Context"

storm.exhibitor.port: 8080
storm.exhibitor.poll.uripath: "/exhibitor/v1/cluster/list"

storm.auth.simple-white-list.users: []
storm.auth.simple-acl.users: []
storm.auth.simple-acl.users.commands: []
storm.auth.simple-acl.admins: []
storm.cluster.state.store: "org.apache.storm.cluster_state.zookeeper_state_factory"
storm.meta.serialization.delegate: "org.apache.storm.serialization.GzipThriftSerializationDelegate"
storm.codedistributor.class: "org.apache.storm.codedistributor.LocalFileSystemCodeDistributor"
storm.workers.artifacts.dir: "workers-artifacts"
storm.health.check.dir: "healthchecks"
storm.health.check.timeout.ms: 5000

#_ LOGVIEWER _#
logviewer.port: 8000
logviewer.childopts: "-Xmx128m"
logviewer.cleanup.age.mins: 10080
logviewer.appender.name: "A1"
logviewer.max.sum.worker.logs.size.mb: 4096
logviewer.max.per.worker.logs.size.mb: 2048

#_ ZOOKEEPER _#
storm.zookeeper.servers:
<% @zookeeper_servers.each do |z| -%>
    - "<%= z %>"
<% end-%>
storm.zookeeper.port: <%= @zookeeper_port %>
storm.zookeeper.root: "<%= @zookeeper_root %>"
storm.zookeeper.session.timeout: <%= @zookeeper_session_timeout %>
storm.zookeeper.connection.timeout: 15000
storm.zookeeper.retry.times: <%= @zookeeper_retry_times %>
storm.zookeeper.retry.interval: <%= @zookeeper_retry_interval %>
storm.zookeeper.retry.intervalceiling.millis: 30000
storm.zookeeper.auth.user: null
storm.zookeeper.auth.password: null
dev.zookeeper.path: <%= @dev_zookeeper_path %>"

transactional.zookeeper.root: "<%= @transactional_zookeeper_root %>"
transactional.zookeeper.servers: <%= @transactional_zookeeper_servers %>
transactional.zookeeper.port: <%= @transactional_zookeeper_port %>

#_ WORKER _#
### worker.* configs are for task workers
worker.heap.memory.mb: <%= @worker_heap_memory_mb %>
worker.childopts: "<%= @worker_childopts %>"
worker.gc.childopts: ""
# Unlocking commercial features requires a special license from Oracle.
# See http://www.oracle.com/technetwork/java/javase/terms/products/index.html
# For this reason, profiler features are disabled by default.
worker.profiler.enabled: false
worker.profiler.childopts: "-XX:+UnlockCommercialFeatures -XX:+FlightRecorder"
worker.profiler.command: "flight.bash"
worker.heartbeat.frequency.secs: <%= @worker_heartbeat_frequency_secs %>
# check whether dynamic log levels can be reset from DEBUG to INFO in workers
worker.log.level.reset.poll.secs: 30
# control how many worker receiver threads we need per worker
topology.worker.receiver.thread.count: 1
task.heartbeat.frequency.secs: <%= @task_heartbeat_frequency_secs %>
task.refresh.poll.secs: <%= @task_refresh_poll_secs %>
task.credentials.poll.secs: 30

#_ NETTY _#
storm.messaging.netty.server_worker_threads: <%= @netty_server_worker_threads %>
storm.messaging.netty.client_worker_threads: <%= @netty_client_worker_threads %>
storm.messaging.netty.buffer_size: <%= @netty_buffer_size %>
# Since nimbus.task.launch.secs and supervisor.worker.start.timeout.secs are 120, other workers should also wait at least that long before giving up on connecting to the other worker. The reconnection period need also be bigger than storm.zookeeper.session.timeout(default is 20s), so that we can abort the reconnection when the target worker is dead.
storm.messaging.netty.max_retries: <%= @netty_max_retries %>
storm.messaging.netty.max_wait_ms: <%= @netty_max_wait_ms %>
storm.messaging.netty.min_wait_ms: <%= @netty_min_wait_ms %>
# If the Netty messaging layer is busy(netty internal buffer not writable), the Netty client will try to batch message as more as possible up to the size of storm.messaging.netty.transfer.batch.size bytes, otherwise it will try to flush message as soon as possible to reduce latency.
storm.messaging.netty.transfer.batch.size: <%= @netty_transfer_batch_size %>
# Sets the backlog value to specify when the channel binds to a local address
storm.messaging.netty.socket.backlog: <%= @netty_socket_backlog %>
# By default, the Netty SASL authentication is set to false.  Users can override and set it true for a specific topology.
storm.messaging.netty.authentication: <%= @netty_authentication %>
# Default plugin to use for automatic network topology discovery
storm.network.topography.plugin: org.apache.storm.networktopography.DefaultRackDNSToSwitchMapping
# default number of seconds group mapping service will cache user group
storm.group.mapping.service.cache.duration.secs: <%= @group_mapping_service_cache_duration_secs %>

#_ 0MQ _#
zmq.threads: <%= @zmq_threads %>
zmq.linger.millis: <%= @zmq_linger_millis %>
zmq.hwm: 0

#_ TOPOLOGY _#
topology.min.replication.count: 1
topology.max.replication.wait.time.sec: 60

topology.backpressure.enable: true
backpressure.disruptor.high.watermark: 0.9
backpressure.disruptor.low.watermark: 0.4

topology.enable.message.timeouts: true
topology.debug: <%= @topology_debug %>
topology.workers:  <%= @topology_workers %>
topology.acker.executors: null
topology.eventlogger.executors: 0
topology.tasks: null
# maximum amount of time a message has to complete before it's considered failed
topology.message.timeout.secs: <%= @topology_message_timeout_secs %>
topology.multilang.serializer: "org.apache.storm.multilang.JsonSerializer"
topology.shellbolt.max.pending: 100
topology.skip.missing.kryo.registrations: <%= @topology_skip_missing_kryo_registrations %>
topology.max.task.parallelism: <%= @topology_max_task_parallelism %>
topology.max.spout.pending: <%= @topology_max_spout_pending %>
topology.state.synchronization.timeout.secs: <%= @topology_state_synchronization_timeout_secs %>
topology.stats.sample.rate: <%= @topology_stats_sample_rate %>
topology.builtin.metrics.bucket.size.secs: 60
topology.fall.back.on.java.serialization: <%= @topology_fall_back_on_java_serialization %>
topology.worker.childopts: <%= @topology_worker_childopts %>
topology.worker.logwriter.childopts: "-Xmx64m"
topology.executor.receive.buffer.size: 1024 #batched
topology.executor.send.buffer.size: 1024 #individual messages
topology.transfer.buffer.size: 1024 # batched
topology.tick.tuple.freq.secs: null
topology.worker.shared.thread.pool.size: 4
topology.spout.wait.strategy: "org.apache.storm.spout.SleepSpoutWaitStrategy"
topology.sleep.spout.wait.strategy.time.ms: 1
topology.error.throttle.interval.secs: 10
topology.max.error.report.per.interval: 5
topology.kryo.factory: "org.apache.storm.serialization.DefaultKryoFactory"
topology.tuple.serializer: "org.apache.storm.serialization.types.ListDelegateSerializer"
topology.trident.batch.emit.interval.millis: 500
topology.testing.always.try.serialize: false
topology.classpath: null
topology.environment: null
topology.bolts.outgoing.overflow.buffer.enable: false
topology.disruptor.wait.timeout.millis: 1000
topology.disruptor.batch.size: 100
topology.disruptor.batch.timeout.millis: 1
topology.disable.loadaware: false
topology.state.checkpoint.interval.ms: 1000

# Configs for Resource Aware Scheduler
# topology priority describing the importance of the topology in decreasing importance starting from 0 (i.e. 0 is the highest priority and the priority importance decreases as the priority number increases).
# Recommended range of 0-29 but no hard limit set.
topology.priority: 29
topology.component.resources.onheap.memory.mb: 128.0
topology.component.resources.offheap.memory.mb: 0.0
topology.component.cpu.pcore.percent: 10.0
topology.worker.max.heap.size.mb: 768.0
topology.scheduler.strategy: "org.apache.storm.scheduler.resource.strategies.scheduling.DefaultResourceAwareStrategy"
resource.aware.scheduler.eviction.strategy: "org.apache.storm.scheduler.resource.strategies.eviction.DefaultEvictionStrategy"
resource.aware.scheduler.priority.strategy: "org.apache.storm.scheduler.resource.strategies.priority.DefaultSchedulingPriorityStrategy"

pacemaker.host: "localhost"
pacemaker.port: 6699
pacemaker.base.threads: 10
pacemaker.max.threads: 50
pacemaker.thread.timeout: 10
pacemaker.childopts: "-Xmx1024m"
pacemaker.auth.method: "NONE"
pacemaker.kerberos.users: []

#default storm daemon metrics reporter plugins
storm.daemon.metrics.reporter.plugins:
     - "org.apache.storm.daemon.metrics.reporters.JmxPreparableReporter"

## blobstore configs
supervisor.blobstore.class: "org.apache.storm.blobstore.NimbusBlobStore"
supervisor.blobstore.download.thread.count: 5
supervisor.blobstore.download.max_retries: 3
supervisor.localizer.cache.target.size.mb: 10240
supervisor.localizer.cleanup.interval.ms: 600000

nimbus.blobstore.class: "org.apache.storm.blobstore.LocalFsBlobStore"
nimbus.blobstore.expiration.secs: 600

storm.blobstore.inputstream.buffer.size.bytes: 65536
client.blobstore.class: "org.apache.storm.blobstore.NimbusBlobStore"
storm.blobstore.replication.factor: 3
